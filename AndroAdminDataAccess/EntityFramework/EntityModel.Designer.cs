//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_AMSServer", "AMSServer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AndroAdminDataAccess.EntityFramework.AMSServer), "StoreAMSServerFTPSitePair", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServerFTPSitePair), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_Store", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AndroAdminDataAccess.EntityFramework.Store), "StoreAMSServerFTPSitePair", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServerFTPSitePair), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_StoreAMSServer_AMSServer", "AMSServer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AndroAdminDataAccess.EntityFramework.AMSServer), "StoreAMSServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServer), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_StoreAMSServer_Store", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AndroAdminDataAccess.EntityFramework.Store), "StoreAMSServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServer), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServer), "StoreAMSServerFtpSite", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServerFtpSite), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_FTPSite_FTPSiteType", "FTPSiteType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AndroAdminDataAccess.EntityFramework.FTPSiteType), "FTPSite", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.FTPSite), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_FTPSite", "FTPSite", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AndroAdminDataAccess.EntityFramework.FTPSite), "StoreAMSServerFTPSitePair", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServerFTPSitePair), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_FTPSite1", "FTPSite", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AndroAdminDataAccess.EntityFramework.FTPSite), "StoreAMSServerFTPSitePair", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServerFTPSitePair), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_StoreAMSServerFtpSite_FTPSite", "FTPSite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AndroAdminDataAccess.EntityFramework.FTPSite), "StoreAMSServerFtpSite", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.StoreAMSServerFtpSite), true)]
[assembly: EdmRelationshipAttribute("AndroAdminModel", "FK_Store_StoreStatus", "StoreStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AndroAdminDataAccess.EntityFramework.StoreStatus), "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AndroAdminDataAccess.EntityFramework.Store), true)]

#endregion

namespace AndroAdminDataAccess.EntityFramework
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AndroAdminEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AndroAdminEntities object using the connection string found in the 'AndroAdminEntities' section of the application configuration file.
        /// </summary>
        public AndroAdminEntities() : base("name=AndroAdminEntities", "AndroAdminEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AndroAdminEntities object.
        /// </summary>
        public AndroAdminEntities(string connectionString) : base(connectionString, "AndroAdminEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AndroAdminEntities object.
        /// </summary>
        public AndroAdminEntities(EntityConnection connection) : base(connection, "AndroAdminEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AMSServer> AMSServers
        {
            get
            {
                if ((_AMSServers == null))
                {
                    _AMSServers = base.CreateObjectSet<AMSServer>("AMSServers");
                }
                return _AMSServers;
            }
        }
        private ObjectSet<AMSServer> _AMSServers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Store> Stores
        {
            get
            {
                if ((_Stores == null))
                {
                    _Stores = base.CreateObjectSet<Store>("Stores");
                }
                return _Stores;
            }
        }
        private ObjectSet<Store> _Stores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoreAMSServerFTPSitePair> StoreAMSServerFTPSitePairs
        {
            get
            {
                if ((_StoreAMSServerFTPSitePairs == null))
                {
                    _StoreAMSServerFTPSitePairs = base.CreateObjectSet<StoreAMSServerFTPSitePair>("StoreAMSServerFTPSitePairs");
                }
                return _StoreAMSServerFTPSitePairs;
            }
        }
        private ObjectSet<StoreAMSServerFTPSitePair> _StoreAMSServerFTPSitePairs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FTPSiteType> FTPSiteTypes
        {
            get
            {
                if ((_FTPSiteTypes == null))
                {
                    _FTPSiteTypes = base.CreateObjectSet<FTPSiteType>("FTPSiteTypes");
                }
                return _FTPSiteTypes;
            }
        }
        private ObjectSet<FTPSiteType> _FTPSiteTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoreAMSServer> StoreAMSServers
        {
            get
            {
                if ((_StoreAMSServers == null))
                {
                    _StoreAMSServers = base.CreateObjectSet<StoreAMSServer>("StoreAMSServers");
                }
                return _StoreAMSServers;
            }
        }
        private ObjectSet<StoreAMSServer> _StoreAMSServers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoreAMSServerFtpSite> StoreAMSServerFtpSites
        {
            get
            {
                if ((_StoreAMSServerFtpSites == null))
                {
                    _StoreAMSServerFtpSites = base.CreateObjectSet<StoreAMSServerFtpSite>("StoreAMSServerFtpSites");
                }
                return _StoreAMSServerFtpSites;
            }
        }
        private ObjectSet<StoreAMSServerFtpSite> _StoreAMSServerFtpSites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FTPSite> FTPSites
        {
            get
            {
                if ((_FTPSites == null))
                {
                    _FTPSites = base.CreateObjectSet<FTPSite>("FTPSites");
                }
                return _FTPSites;
            }
        }
        private ObjectSet<FTPSite> _FTPSites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoreStatus> StoreStatus1
        {
            get
            {
                if ((_StoreStatus1 == null))
                {
                    _StoreStatus1 = base.CreateObjectSet<StoreStatus>("StoreStatus1");
                }
                return _StoreStatus1;
            }
        }
        private ObjectSet<StoreStatus> _StoreStatus1;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AMSServers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAMSServers(AMSServer aMSServer)
        {
            base.AddObject("AMSServers", aMSServer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStores(Store store)
        {
            base.AddObject("Stores", store);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoreAMSServerFTPSitePairs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoreAMSServerFTPSitePairs(StoreAMSServerFTPSitePair storeAMSServerFTPSitePair)
        {
            base.AddObject("StoreAMSServerFTPSitePairs", storeAMSServerFTPSitePair);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FTPSiteTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFTPSiteTypes(FTPSiteType fTPSiteType)
        {
            base.AddObject("FTPSiteTypes", fTPSiteType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoreAMSServers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoreAMSServers(StoreAMSServer storeAMSServer)
        {
            base.AddObject("StoreAMSServers", storeAMSServer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoreAMSServerFtpSites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoreAMSServerFtpSites(StoreAMSServerFtpSite storeAMSServerFtpSite)
        {
            base.AddObject("StoreAMSServerFtpSites", storeAMSServerFtpSite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FTPSites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFTPSites(FTPSite fTPSite)
        {
            base.AddObject("FTPSites", fTPSite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoreStatus1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoreStatus1(StoreStatus storeStatus)
        {
            base.AddObject("StoreStatus1", storeStatus);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="AMSServer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AMSServer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AMSServer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static AMSServer CreateAMSServer(global::System.Int32 id, global::System.String name, global::System.String description)
        {
            AMSServer aMSServer = new AMSServer();
            aMSServer.Id = id;
            aMSServer.Name = name;
            aMSServer.Description = description;
            return aMSServer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_AMSServer", "StoreAMSServerFTPSitePair")]
        public EntityCollection<StoreAMSServerFTPSitePair> StoreAMSServerFTPSitePairs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoreAMSServerFTPSitePair>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_AMSServer", "StoreAMSServerFTPSitePair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoreAMSServerFTPSitePair>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_AMSServer", "StoreAMSServerFTPSitePair", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServer_AMSServer", "StoreAMSServer")]
        public EntityCollection<StoreAMSServer> StoreAMSServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoreAMSServer>("AndroAdminModel.FK_StoreAMSServer_AMSServer", "StoreAMSServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoreAMSServer>("AndroAdminModel.FK_StoreAMSServer_AMSServer", "StoreAMSServer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="FTPSite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FTPSite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FTPSite object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="port">Initial value of the Port property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="fTPSiteType_Id">Initial value of the FTPSiteType_Id property.</param>
        public static FTPSite CreateFTPSite(global::System.Int32 id, global::System.String name, global::System.String url, global::System.Int32 port, global::System.String username, global::System.String password, global::System.Boolean isPrimary, global::System.Int32 fTPSiteType_Id)
        {
            FTPSite fTPSite = new FTPSite();
            fTPSite.Id = id;
            fTPSite.Name = name;
            fTPSite.Url = url;
            fTPSite.Port = port;
            fTPSite.Username = username;
            fTPSite.Password = password;
            fTPSite.IsPrimary = isPrimary;
            fTPSite.FTPSiteType_Id = fTPSiteType_Id;
            return fTPSite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private global::System.Int32 _Port;
        partial void OnPortChanging(global::System.Int32 value);
        partial void OnPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerType
        {
            get
            {
                return _ServerType;
            }
            set
            {
                OnServerTypeChanging(value);
                ReportPropertyChanging("ServerType");
                _ServerType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerType");
                OnServerTypeChanged();
            }
        }
        private global::System.String _ServerType;
        partial void OnServerTypeChanging(global::System.String value);
        partial void OnServerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FTPSiteType_Id
        {
            get
            {
                return _FTPSiteType_Id;
            }
            set
            {
                OnFTPSiteType_IdChanging(value);
                ReportPropertyChanging("FTPSiteType_Id");
                _FTPSiteType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FTPSiteType_Id");
                OnFTPSiteType_IdChanged();
            }
        }
        private global::System.Int32 _FTPSiteType_Id;
        partial void OnFTPSiteType_IdChanging(global::System.Int32 value);
        partial void OnFTPSiteType_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_FTPSite_FTPSiteType", "FTPSiteType")]
        public FTPSiteType FTPSiteType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSiteType>("AndroAdminModel.FK_FTPSite_FTPSiteType", "FTPSiteType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSiteType>("AndroAdminModel.FK_FTPSite_FTPSiteType", "FTPSiteType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FTPSiteType> FTPSiteTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSiteType>("AndroAdminModel.FK_FTPSite_FTPSiteType", "FTPSiteType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FTPSiteType>("AndroAdminModel.FK_FTPSite_FTPSiteType", "FTPSiteType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_FTPSite", "StoreAMSServerFTPSitePair")]
        public EntityCollection<StoreAMSServerFTPSitePair> StoreAMSServerFTPSitePairs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoreAMSServerFTPSitePair>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite", "StoreAMSServerFTPSitePair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoreAMSServerFTPSitePair>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite", "StoreAMSServerFTPSitePair", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_FTPSite1", "StoreAMSServerFTPSitePair")]
        public EntityCollection<StoreAMSServerFTPSitePair> StoreAMSServerFTPSitePairs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoreAMSServerFTPSitePair>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite1", "StoreAMSServerFTPSitePair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoreAMSServerFTPSitePair>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite1", "StoreAMSServerFTPSitePair", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFtpSite_FTPSite", "StoreAMSServerFtpSite")]
        public EntityCollection<StoreAMSServerFtpSite> StoreAMSServerFtpSites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoreAMSServerFtpSite>("AndroAdminModel.FK_StoreAMSServerFtpSite_FTPSite", "StoreAMSServerFtpSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoreAMSServerFtpSite>("AndroAdminModel.FK_StoreAMSServerFtpSite_FTPSite", "StoreAMSServerFtpSite", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="FTPSiteType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FTPSiteType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FTPSiteType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FTPSiteType CreateFTPSiteType(global::System.Int32 id, global::System.String name)
        {
            FTPSiteType fTPSiteType = new FTPSiteType();
            fTPSiteType.Id = id;
            fTPSiteType.Name = name;
            return fTPSiteType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_FTPSite_FTPSiteType", "FTPSite")]
        public EntityCollection<FTPSite> FTPSites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FTPSite>("AndroAdminModel.FK_FTPSite_FTPSiteType", "FTPSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FTPSite>("AndroAdminModel.FK_FTPSite_FTPSiteType", "FTPSite", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.DateTime created)
        {
            Log log = new Log();
            log.id = id;
            log.Created = created;
            return log;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreId
        {
            get
            {
                return _StoreId;
            }
            set
            {
                OnStoreIdChanging(value);
                ReportPropertyChanging("StoreId");
                _StoreId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreId");
                OnStoreIdChanged();
            }
        }
        private global::System.String _StoreId;
        partial void OnStoreIdChanging(global::System.String value);
        partial void OnStoreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Severity
        {
            get
            {
                return _Severity;
            }
            set
            {
                OnSeverityChanging(value);
                ReportPropertyChanging("Severity");
                _Severity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Severity");
                OnSeverityChanged();
            }
        }
        private global::System.String _Severity;
        partial void OnSeverityChanging(global::System.String value);
        partial void OnSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="Store")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Store : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Store object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="andromedaSiteId">Initial value of the AndromedaSiteId property.</param>
        /// <param name="storeStatusId">Initial value of the StoreStatusId property.</param>
        public static Store CreateStore(global::System.Int32 id, global::System.String name, global::System.Int32 andromedaSiteId, global::System.Int32 storeStatusId)
        {
            Store store = new Store();
            store.Id = id;
            store.Name = name;
            store.AndromedaSiteId = andromedaSiteId;
            store.StoreStatusId = storeStatusId;
            return store;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AndromedaSiteId
        {
            get
            {
                return _AndromedaSiteId;
            }
            set
            {
                OnAndromedaSiteIdChanging(value);
                ReportPropertyChanging("AndromedaSiteId");
                _AndromedaSiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AndromedaSiteId");
                OnAndromedaSiteIdChanged();
            }
        }
        private global::System.Int32 _AndromedaSiteId;
        partial void OnAndromedaSiteIdChanging(global::System.Int32 value);
        partial void OnAndromedaSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerSiteId
        {
            get
            {
                return _CustomerSiteId;
            }
            set
            {
                OnCustomerSiteIdChanging(value);
                ReportPropertyChanging("CustomerSiteId");
                _CustomerSiteId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerSiteId");
                OnCustomerSiteIdChanged();
            }
        }
        private global::System.String _CustomerSiteId;
        partial void OnCustomerSiteIdChanging(global::System.String value);
        partial void OnCustomerSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastFTPUploadDateTime
        {
            get
            {
                return _LastFTPUploadDateTime;
            }
            set
            {
                OnLastFTPUploadDateTimeChanging(value);
                ReportPropertyChanging("LastFTPUploadDateTime");
                _LastFTPUploadDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastFTPUploadDateTime");
                OnLastFTPUploadDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastFTPUploadDateTime;
        partial void OnLastFTPUploadDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastFTPUploadDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreStatusId
        {
            get
            {
                return _StoreStatusId;
            }
            set
            {
                OnStoreStatusIdChanging(value);
                ReportPropertyChanging("StoreStatusId");
                _StoreStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreStatusId");
                OnStoreStatusIdChanged();
            }
        }
        private global::System.Int32 _StoreStatusId;
        partial void OnStoreStatusIdChanging(global::System.Int32 value);
        partial void OnStoreStatusIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_Store", "StoreAMSServerFTPSitePair")]
        public EntityCollection<StoreAMSServerFTPSitePair> StoreAMSServerFTPSitePairs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoreAMSServerFTPSitePair>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_Store", "StoreAMSServerFTPSitePair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoreAMSServerFTPSitePair>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_Store", "StoreAMSServerFTPSitePair", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServer_Store", "StoreAMSServer")]
        public EntityCollection<StoreAMSServer> StoreAMSServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoreAMSServer>("AndroAdminModel.FK_StoreAMSServer_Store", "StoreAMSServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoreAMSServer>("AndroAdminModel.FK_StoreAMSServer_Store", "StoreAMSServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_Store_StoreStatus", "StoreStatu")]
        public StoreStatus StoreStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreStatus>("AndroAdminModel.FK_Store_StoreStatus", "StoreStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreStatus>("AndroAdminModel.FK_Store_StoreStatus", "StoreStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StoreStatus> StoreStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreStatus>("AndroAdminModel.FK_Store_StoreStatus", "StoreStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StoreStatus>("AndroAdminModel.FK_Store_StoreStatus", "StoreStatu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="StoreAMSServer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoreAMSServer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoreAMSServer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="storeId">Initial value of the StoreId property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="aMSServerId">Initial value of the AMSServerId property.</param>
        public static StoreAMSServer CreateStoreAMSServer(global::System.Int32 id, global::System.Int32 storeId, global::System.Int32 priority, global::System.Int32 aMSServerId)
        {
            StoreAMSServer storeAMSServer = new StoreAMSServer();
            storeAMSServer.Id = id;
            storeAMSServer.StoreId = storeId;
            storeAMSServer.Priority = priority;
            storeAMSServer.AMSServerId = aMSServerId;
            return storeAMSServer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreId
        {
            get
            {
                return _StoreId;
            }
            set
            {
                OnStoreIdChanging(value);
                ReportPropertyChanging("StoreId");
                _StoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreId");
                OnStoreIdChanged();
            }
        }
        private global::System.Int32 _StoreId;
        partial void OnStoreIdChanging(global::System.Int32 value);
        partial void OnStoreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AMSServerId
        {
            get
            {
                return _AMSServerId;
            }
            set
            {
                OnAMSServerIdChanging(value);
                ReportPropertyChanging("AMSServerId");
                _AMSServerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMSServerId");
                OnAMSServerIdChanged();
            }
        }
        private global::System.Int32 _AMSServerId;
        partial void OnAMSServerIdChanging(global::System.Int32 value);
        partial void OnAMSServerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServer_AMSServer", "AMSServer")]
        public AMSServer AMSServer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AMSServer>("AndroAdminModel.FK_StoreAMSServer_AMSServer", "AMSServer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AMSServer>("AndroAdminModel.FK_StoreAMSServer_AMSServer", "AMSServer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AMSServer> AMSServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AMSServer>("AndroAdminModel.FK_StoreAMSServer_AMSServer", "AMSServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AMSServer>("AndroAdminModel.FK_StoreAMSServer_AMSServer", "AMSServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServer_Store", "Store")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AndroAdminModel.FK_StoreAMSServer_Store", "Store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AndroAdminModel.FK_StoreAMSServer_Store", "Store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AndroAdminModel.FK_StoreAMSServer_Store", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("AndroAdminModel.FK_StoreAMSServer_Store", "Store", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServerFtpSite")]
        public EntityCollection<StoreAMSServerFtpSite> StoreAMSServerFtpSites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoreAMSServerFtpSite>("AndroAdminModel.FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServerFtpSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoreAMSServerFtpSite>("AndroAdminModel.FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServerFtpSite", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="StoreAMSServerFtpSite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoreAMSServerFtpSite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoreAMSServerFtpSite object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="storeAMSServerId">Initial value of the StoreAMSServerId property.</param>
        /// <param name="fTPSiteId">Initial value of the FTPSiteId property.</param>
        public static StoreAMSServerFtpSite CreateStoreAMSServerFtpSite(global::System.Int32 id, global::System.Int32 storeAMSServerId, global::System.Int32 fTPSiteId)
        {
            StoreAMSServerFtpSite storeAMSServerFtpSite = new StoreAMSServerFtpSite();
            storeAMSServerFtpSite.Id = id;
            storeAMSServerFtpSite.StoreAMSServerId = storeAMSServerId;
            storeAMSServerFtpSite.FTPSiteId = fTPSiteId;
            return storeAMSServerFtpSite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreAMSServerId
        {
            get
            {
                return _StoreAMSServerId;
            }
            set
            {
                OnStoreAMSServerIdChanging(value);
                ReportPropertyChanging("StoreAMSServerId");
                _StoreAMSServerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreAMSServerId");
                OnStoreAMSServerIdChanged();
            }
        }
        private global::System.Int32 _StoreAMSServerId;
        partial void OnStoreAMSServerIdChanging(global::System.Int32 value);
        partial void OnStoreAMSServerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FTPSiteId
        {
            get
            {
                return _FTPSiteId;
            }
            set
            {
                OnFTPSiteIdChanging(value);
                ReportPropertyChanging("FTPSiteId");
                _FTPSiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FTPSiteId");
                OnFTPSiteIdChanged();
            }
        }
        private global::System.Int32 _FTPSiteId;
        partial void OnFTPSiteIdChanging(global::System.Int32 value);
        partial void OnFTPSiteIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServer")]
        public StoreAMSServer StoreAMSServer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreAMSServer>("AndroAdminModel.FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreAMSServer>("AndroAdminModel.FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StoreAMSServer> StoreAMSServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreAMSServer>("AndroAdminModel.FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StoreAMSServer>("AndroAdminModel.FK_StoreAMSServerFtpSite_StoreAMSServer", "StoreAMSServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFtpSite_FTPSite", "FTPSite")]
        public FTPSite FTPSite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFtpSite_FTPSite", "FTPSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFtpSite_FTPSite", "FTPSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FTPSite> FTPSiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFtpSite_FTPSite", "FTPSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFtpSite_FTPSite", "FTPSite", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="StoreAMSServerFTPSitePair")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoreAMSServerFTPSitePair : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoreAMSServerFTPSitePair object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="storeId">Initial value of the StoreId property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="aMSServerId">Initial value of the AMSServerId property.</param>
        public static StoreAMSServerFTPSitePair CreateStoreAMSServerFTPSitePair(global::System.Int32 id, global::System.Int32 storeId, global::System.Int32 priority, global::System.Int32 aMSServerId)
        {
            StoreAMSServerFTPSitePair storeAMSServerFTPSitePair = new StoreAMSServerFTPSitePair();
            storeAMSServerFTPSitePair.Id = id;
            storeAMSServerFTPSitePair.StoreId = storeId;
            storeAMSServerFTPSitePair.Priority = priority;
            storeAMSServerFTPSitePair.AMSServerId = aMSServerId;
            return storeAMSServerFTPSitePair;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreId
        {
            get
            {
                return _StoreId;
            }
            set
            {
                OnStoreIdChanging(value);
                ReportPropertyChanging("StoreId");
                _StoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreId");
                OnStoreIdChanged();
            }
        }
        private global::System.Int32 _StoreId;
        partial void OnStoreIdChanging(global::System.Int32 value);
        partial void OnStoreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AMSServerId
        {
            get
            {
                return _AMSServerId;
            }
            set
            {
                OnAMSServerIdChanging(value);
                ReportPropertyChanging("AMSServerId");
                _AMSServerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMSServerId");
                OnAMSServerIdChanged();
            }
        }
        private global::System.Int32 _AMSServerId;
        partial void OnAMSServerIdChanging(global::System.Int32 value);
        partial void OnAMSServerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryFTPSiteId
        {
            get
            {
                return _PrimaryFTPSiteId;
            }
            set
            {
                OnPrimaryFTPSiteIdChanging(value);
                ReportPropertyChanging("PrimaryFTPSiteId");
                _PrimaryFTPSiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryFTPSiteId");
                OnPrimaryFTPSiteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryFTPSiteId;
        partial void OnPrimaryFTPSiteIdChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryFTPSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondaryFTPSiteId
        {
            get
            {
                return _SecondaryFTPSiteId;
            }
            set
            {
                OnSecondaryFTPSiteIdChanging(value);
                ReportPropertyChanging("SecondaryFTPSiteId");
                _SecondaryFTPSiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondaryFTPSiteId");
                OnSecondaryFTPSiteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondaryFTPSiteId;
        partial void OnSecondaryFTPSiteIdChanging(Nullable<global::System.Int32> value);
        partial void OnSecondaryFTPSiteIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_AMSServer", "AMSServer")]
        public AMSServer AMSServer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AMSServer>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_AMSServer", "AMSServer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AMSServer>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_AMSServer", "AMSServer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AMSServer> AMSServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AMSServer>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_AMSServer", "AMSServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AMSServer>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_AMSServer", "AMSServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_Store", "Store")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_Store", "Store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_Store", "Store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_Store", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_Store", "Store", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_FTPSite", "FTPSite")]
        public FTPSite FTPSite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite", "FTPSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite", "FTPSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FTPSite> FTPSiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite", "FTPSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite", "FTPSite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_StoreAMSServerFTPServerPair_FTPSite1", "FTPSite")]
        public FTPSite FTPSite1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite1", "FTPSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite1", "FTPSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FTPSite> FTPSite1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite1", "FTPSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FTPSite>("AndroAdminModel.FK_StoreAMSServerFTPServerPair_FTPSite1", "FTPSite", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AndroAdminModel", Name="StoreStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoreStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoreStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static StoreStatus CreateStoreStatus(global::System.Int32 id, global::System.String status, global::System.String description)
        {
            StoreStatus storeStatus = new StoreStatus();
            storeStatus.Id = id;
            storeStatus.Status = status;
            storeStatus.Description = description;
            return storeStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AndroAdminModel", "FK_Store_StoreStatus", "Store")]
        public EntityCollection<Store> Stores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Store>("AndroAdminModel.FK_Store_StoreStatus", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Store>("AndroAdminModel.FK_Store_StoreStatus", "Store", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
